- name: configure catalogue component
  hosts: local
  connection: local
  tasks:
  - name: disable default nodejs version
    ansible.builtin.command: dnf module disable nodejs -y
  
  - name: enable default nodejs version
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs version
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      home: /app
      system: true
      shell: /sbin/nologin

  - name: create an app directory
    ansible.builtin.file:
      path: /app
      state: directory
  
  - name: download application code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip

  - name: unzip the downloaded code
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install npm dependencies
    ansible.builtin.command: npm install
    args:
        chdir: /app

  - name: copy catalogue service to system directory
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: reload the service
    ansible.builtin.service:
      name: catalogue
      state: reloaded
   
   
  - name: start and enable the service
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes

  - name: copy mongodb repo 
    ansible.builtin.copy:
      src: mongodb.service
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client in the catalogue server
    ansible.builtin.dnf:
      name: mongodb-mongosh

  - name: load products
    ansible.builtin.shell: mongosh --host mongodb.daws84s.site < /app/db/master-data.js